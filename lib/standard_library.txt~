Standard Library
-------------------
UTF8 Characters -> Complete <MODDED>
Strings -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Stacks -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Queues -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Binary Heaps -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Priority Queues -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Vectors -> Complete (need to implement logging and error handling). <MODDED> <CHECKED, FINISHED!>
Lists (like vectors, but uses pointers to data instead of copying data). -> Complete <MODDED> <CHECKED, FINISHED!>
Maps -> Complete <MODDED> <CHECKED, FINISHED!>
Hashmaps -> Complete <MODDED> <CHECKED, FINISHED!>
Graph -> Complete <MODDED> <CHECKED, FINISHED!>
Weighted Graph -> Complete <MODDED> <CHECKED, FINISHED!>
Set (list) -> Complete <MODDED> <CHECKED, FINISHED!>
Object Set (vector) -> Complete <MODDED> <CHECKED, FINISHED!>

Binary Search Tree -> Complete <MODDED> <CHECKED, FINISHED!>
AVL Tree -> Complete <MODDED> <CHECKED, FINISHED>
Red-Black Tree -> <SKIP>
VEB Tree -> <SKIP>
B-Tree
Trie -> Complete <MODDED> <CHECK, FINISHED>
Ternary Search Tree
Fibonacci Heaps

Merge Sort
Heap Sort
Quick Sort
Bucket Sort
Radix Sort

Matrices

Collection

Algorithm
-------------------
Probability
Dynamic Programming Template
Serialization

Math
----------------------
Geometry
Trig
Integral
Derivative
Statistics


Data/Protocols Library
----------------------
XML
JSON
HTTP
HTML
Javascript Builder


Parsing
----------------------
Text Parser
Binary Parser





